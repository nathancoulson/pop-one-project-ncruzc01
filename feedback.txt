Total coursework mark: 19.5 (out of 20)

Exercise sheets mark: 10  (out of 10)

Project mark:  9.5  (out of 10)

Project feedback and mark details

Correctness and adherence to specification:  26  (out of 30%)

- At the very last line of three_musketeers.py, consider modifying your code as follows to ensure your code runs as submitted (whilst also running without modification in pytest). 

    if __name__ == "__main__":
        start()

- Your program crashes with an exception with certain illegal moves e.g. if you enter a move from an empty space on the board.
- Your functionality otherwise works as specified.


Completeness of code, tests, and commit history:  30    (out of 30%)   

- Your implementation is complete.
- Your 20 tests all pass. Your number of tests is appropriate for the project.
- GitHub session 7 initial commit is present.
- Your GitHub commit history is good.


Coding style: 9   (out of 10%) 

- Your coding style is overall good. 
- Consider writing more succinct code where possible. e.g. in three_musketeers.py (line 309):

   if ((musk_loc[0][0] == musk_loc[1][0] and musk_loc[1][0] == musk_loc[2][0]) or
        (musk_loc[0][1] == musk_loc[1][1] and musk_loc[1][1] == musk_loc[2][1])):
        return True
    else:
        return False

to:

   return ((musk_loc[0][0] == musk_loc[1][0] and musk_loc[1][0] == musk_loc[2][0]) or
        (musk_loc[0][1] == musk_loc[1][1] and musk_loc[1][1] == musk_loc[2][1]))


Extension:  30     (out of 30%) 

- You have correctly implemented the file saving extension which saves both the board and the role of the player, and allows multiple games to be stored. Well Done!


